general:
    artifacts:
        - ./server/coverage_report.txt
        - ./client/coverage/text/*

checkout:
    post:
        - cp ./server/server/localsettings.py.circle-ci ./server/server/localsettings.py
        - cp ./client/test/protractor.localconf.json.circle-ci ./client/test/protractor.localconf.json

machine:
    python:
        version: 2.7.10
    node:
        version: v4.4.3

dependencies:
    override:
        - pip install -r server/requirements.txt
        - pip install -r server/requirements_dev.txt
        - pip install awscli
        - if [ $CIRCLE_NODE_INDEX == 1 ]; then sudo chown -R $USER /usr/local/share/man/ ; fi
        - if [ $CIRCLE_NODE_INDEX == 1 ]; then pip install pep8 ; fi
        - if [ $CIRCLE_NODE_INDEX == 1 ]; then pip install xenon; fi
        - if [ $CIRCLE_NODE_INDEX == 1 ]; then npm install -g eslint; fi
        - if [ $CIRCLE_NODE_INDEX == 1 ]; then npm install -g eslint-plugin-jasmine; fi
        - npm install -g bower
        - npm install -g grunt
        - if [ $CIRCLE_NODE_INDEX == 0 ] && [ $(node -p "try{require('aglio/package.json').version}catch(e){}") != "2.3.0" ]; then npm install aglio@2.3.0; fi  # for REST API documentation
        - 'npm prune && npm install':
            pwd:
                client
        - bower install:
            pwd:
                client
    cache_directories:
        - "node_modules" # for aglio (REST docs)
        - "client/node_modules"

#database:

test:
    pre:
        - 'python manage.py collectstatic --noinput':
            pwd: server
            parallel: true
    override:
        - 'case $CIRCLE_NODE_INDEX in 0) cd server && coverage run manage.py test --timing ;; 1) ./lint_check.sh && cd client && grunt prod --build-number ${CIRCLE_BUILD_NUM} ;; esac':
            parallel: true
    post:
        - 'mkdir client/dist && git rev-parse HEAD | tee server/git_commit_hash.txt client/dist/git_commit_hash.txt'
        - 'echo "${CIRCLE_BUILD_NUM}" > build_number.txt':
            parallel: true
            pwd: server
        - 'if [[ "$CIRCLE_NODE_INDEX" == "0" ]]; then tar -pc * -zf $CIRCLE_ARTIFACTS/server.tar.gz; ../scripts/push_artifact_to_s3.sh $CIRCLE_ARTIFACTS/server.tar.gz; fi':
            parallel: true
            pwd: server
        - 'if [[ "$CIRCLE_NODE_INDEX" == "0" ]]; then PATH=$PATH:$(npm bin) ./server/restapi/docs/build.sh -o build-${CIRCLE_BUILD_NUM}.html; ./scripts/push_docs_to_s3.sh build-${CIRCLE_BUILD_NUM}.html; fi':
            parallel: true
        - 'if [[ "$CIRCLE_NODE_INDEX" == "1" ]]; then tar -pc dist/ ../server/static -zf $CIRCLE_ARTIFACTS/client.tar.gz; else export; fi':
            parallel: true
            pwd: client
        - 'if [[ "$CIRCLE_NODE_INDEX" == "1" ]] && [[ "$CIRCLE_BRANCH" == "master" ]]; then ./scripts/push_static_to_s3.sh; fi':
            parallel: true
        - coverage report > coverage_report.txt:
            pwd: server
        - coverage xml:
            pwd: server
        - test "$CIRCLE_BRANCH" == "master" && pushci --debug || exit 0

#teardown:
