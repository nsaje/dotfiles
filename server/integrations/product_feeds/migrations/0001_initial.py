# Generated by Django 2.1.11 on 2019-10-28 13:49

import django.contrib.postgres.fields
import django.db.models.deletion
import jsonfield.fields
from django.db import migrations
from django.db import models

import integrations.product_feeds.models.product_feed.instance


class Migration(migrations.Migration):

    initial = True

    dependencies = [("dash", "0435_auto_20191023_1248")]

    operations = [
        migrations.CreateModel(
            name="ProductFeed",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("feed_url", models.CharField(max_length=255)),
                ("status", models.IntegerField(choices=[(1, "Enabled"), (2, "Disabled")], default=1)),
                (
                    "feed_type",
                    models.IntegerField(choices=[(1, "Yahoo news feed"), (2, "Yahoo sports feed"), (3, "Google feed")]),
                ),
                (
                    "truncate_description",
                    models.BooleanField(
                        default=False,
                        help_text="If True, it will be truncated by words and 3 dots appended. Otherwise ad will be ignored.",
                    ),
                ),
                (
                    "truncate_title",
                    models.BooleanField(
                        default=False,
                        help_text="If True, it will be truncated by words and 3 dots will be appended. Otherwise ad will be ignored.",
                    ),
                ),
                (
                    "default_brand_name",
                    models.CharField(
                        help_text="Default to use when brand is not specified in the feed", max_length=255
                    ),
                ),
                (
                    "default_call_to_action",
                    models.CharField(
                        default="Read more",
                        help_text="Default to use when brand is not specified in the feed",
                        max_length=255,
                    ),
                ),
                (
                    "content_ads_ttl",
                    models.IntegerField(
                        default=0,
                        help_text="Time to live of the ad before being paused and archived. If 0, it will never expire.",
                    ),
                ),
                (
                    "blacklisted_keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), blank=True, default=list, null=True, size=None
                    ),
                ),
                ("ad_groups", models.ManyToManyField(to="dash.AdGroup")),
            ],
            bases=(integrations.product_feeds.models.product_feed.instance.ProductFeedInstanceMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SyncAttempt",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("ads_skipped", jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ("exception", models.CharField(blank=True, default="", max_length=255)),
                ("dry_run", models.BooleanField(default=False)),
                ("items_to_upload", jsonfield.fields.JSONField(blank=True, default=dict, null=True)),
                ("ads_paused_and_archived", models.ManyToManyField(to="dash.ContentAd")),
                ("batches", models.ManyToManyField(to="dash.UploadBatch")),
                (
                    "product_feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sync_attempts",
                        to="product_feeds.ProductFeed",
                    ),
                ),
            ],
        ),
    ]
