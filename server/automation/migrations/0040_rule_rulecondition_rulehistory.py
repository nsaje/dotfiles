# Generated by Django 2.1.2 on 2019-06-06 14:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dash", "0412_migrate_cpc_cpm_values"),
        ("automation", "0039_auto_20180823_1551"),
    ]

    operations = [
        migrations.CreateModel(
            name="Rule",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=127)),
                (
                    "target",
                    models.IntegerField(
                        choices=[
                            (1, "Ad group"),
                            (2, "Ad"),
                            (3, "Publisher"),
                            (4, "Device"),
                            (5, "Country"),
                            (6, "State"),
                            (7, "DMA"),
                            (8, "Operating system"),
                            (9, "Source"),
                        ]
                    ),
                ),
                (
                    "action_type",
                    models.IntegerField(
                        choices=[
                            (1, "Increase bid"),
                            (2, "Decrease bid"),
                            (3, "Increase bid modifier"),
                            (4, "Decrease bid modifier"),
                            (5, "Increase budget"),
                            (6, "Decrease budget"),
                            (7, "Turn off"),
                            (8, "Blacklist"),
                            (9, "Send an e-mail"),
                        ]
                    ),
                ),
                ("change_step", models.DecimalField(decimal_places=4, max_digits=10)),
                ("change_limit", models.DecimalField(decimal_places=4, max_digits=10)),
                ("cooldown", models.IntegerField()),
                (
                    "notification_type",
                    models.IntegerField(
                        choices=[
                            (1, "Never send an e-mail"),
                            (2, "Send an e-mail whenever the rule runs"),
                            (3, "Send an e-mail whenever the rule performs an action"),
                        ]
                    ),
                ),
                ("notification_recipients", models.TextField(blank=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                ("ad_groups_included", models.ManyToManyField(to="dash.AdGroup")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RuleCondition",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "left_operand_aggregate_type",
                    models.IntegerField(choices=[(1, "N/A"), (2, "No aggregation"), (3, "Average"), (4, "Sum")]),
                ),
                (
                    "left_operand_window",
                    models.IntegerField(
                        choices=[
                            (1, "N/A"),
                            (2, "Last day"),
                            (3, "Last 3 days"),
                            (4, "Last week"),
                            (5, "Last month"),
                            (6, "Lifetime"),
                        ]
                    ),
                ),
                (
                    "left_operand_type",
                    models.IntegerField(
                        choices=[
                            (1, "Absolute value"),
                            (2, "Constant"),
                            (3, "Daily budget"),
                            (4, "Daily budget spent percentage"),
                            (5, "Bid"),
                            (6, "Bid modifier"),
                            (7, "Total spend"),
                            (8, "Primary goal"),
                            (9, "Impressions"),
                            (10, "Clicks"),
                            (11, "CTR"),
                            (12, "Average CPC"),
                            (13, "Average CPM"),
                            (14, "Visits"),
                            (15, "Unique users"),
                            (16, "New users"),
                            (17, "Returning users"),
                            (18, "New users percentage"),
                            (19, "Click discrepancy"),
                            (20, "Pageviews"),
                            (21, "Pageviews per visit"),
                            (22, "Bounced visits"),
                            (23, "Non-bounced visits"),
                            (24, "Bounced rate"),
                            (25, "Total seconds"),
                            (26, "Time on site"),
                            (27, "Average cost per visit"),
                            (28, "Average cost per new visitor"),
                            (29, "Average cost per pageview"),
                            (30, "Average cost per non-bounced visit"),
                            (31, "Average cost per minute"),
                            (32, "Video start"),
                            (33, "Video fist quartile"),
                            (34, "Video midpoint"),
                            (35, "Video third quartile"),
                            (36, "Video complete"),
                            (37, "Average CPV"),
                            (38, "Average CPCV"),
                        ]
                    ),
                ),
                ("left_operand_value", models.CharField(max_length=127)),
                (
                    "operator",
                    models.IntegerField(
                        choices=[
                            (1, "Is equal to"),
                            (2, "Is not equal to"),
                            (3, "Is less than"),
                            (4, "Is greater than"),
                            (5, "Is between"),
                            (6, "is not between"),
                            (7, "Contains"),
                            (8, "Does not contain"),
                        ]
                    ),
                ),
                (
                    "right_operand_aggregate_type",
                    models.IntegerField(choices=[(1, "N/A"), (2, "No aggregation"), (3, "Average"), (4, "Sum")]),
                ),
                (
                    "right_operand_window",
                    models.IntegerField(
                        choices=[
                            (1, "N/A"),
                            (2, "Last day"),
                            (3, "Last 3 days"),
                            (4, "Last week"),
                            (5, "Last month"),
                            (6, "Lifetime"),
                        ]
                    ),
                ),
                (
                    "right_operand_type",
                    models.IntegerField(
                        choices=[
                            (1, "Absolute value"),
                            (2, "Constant"),
                            (3, "Daily budget"),
                            (4, "Daily budget spent percentage"),
                            (5, "Bid"),
                            (6, "Bid modifier"),
                            (7, "Total spend"),
                            (8, "Primary goal"),
                            (9, "Impressions"),
                            (10, "Clicks"),
                            (11, "CTR"),
                            (12, "Average CPC"),
                            (13, "Average CPM"),
                            (14, "Visits"),
                            (15, "Unique users"),
                            (16, "New users"),
                            (17, "Returning users"),
                            (18, "New users percentage"),
                            (19, "Click discrepancy"),
                            (20, "Pageviews"),
                            (21, "Pageviews per visit"),
                            (22, "Bounced visits"),
                            (23, "Non-bounced visits"),
                            (24, "Bounced rate"),
                            (25, "Total seconds"),
                            (26, "Time on site"),
                            (27, "Average cost per visit"),
                            (28, "Average cost per new visitor"),
                            (29, "Average cost per pageview"),
                            (30, "Average cost per non-bounced visit"),
                            (31, "Average cost per minute"),
                            (32, "Video start"),
                            (33, "Video fist quartile"),
                            (34, "Video midpoint"),
                            (35, "Video third quartile"),
                            (36, "Video complete"),
                            (37, "Average CPV"),
                            (38, "Average CPCV"),
                        ]
                    ),
                ),
                ("right_operand_value", models.CharField(max_length=127)),
                ("rule", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="automation.Rule")),
            ],
        ),
        migrations.CreateModel(
            name="RuleHistory",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("changes_text", models.TextField()),
                ("changes", jsonfield.fields.JSONField()),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created at")),
                (
                    "ad_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="rule_history", to="dash.AdGroup"
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="history", to="automation.Rule"
                    ),
                ),
            ],
            options={"verbose_name": "Rule history", "verbose_name_plural": "Rule history"},
        ),
    ]
