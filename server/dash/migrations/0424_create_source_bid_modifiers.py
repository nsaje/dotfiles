# Generated by Django 2.1.8 on 2019-05-21 13:07

from django.db import migrations

import structlog
from core.features import bid_modifiers
from dash import constants
from utils.queryset_helper import chunk_iterator

BATCH_SIZE = 200000
logger = structlog.get_logger(__name__)


def foward_migration(apps, schema_editor):
    create_source_bid_modifiers(apps, schema_editor)


def backward_migration(apps, schema_editor):
    delete_source_bid_modifiers(apps, schema_editor)


class Migration(migrations.Migration):
    atomic = False

    dependencies = [("dash", "0423_assign_missing_cpc_cpm_values")]

    operations = [migrations.RunPython(foward_migration, reverse_code=backward_migration)]


def create_source_bid_modifiers(apps, schema_editor):
    logger.info("Creating source bid modifiers.")
    AdGroup = apps.get_model("dash", "AdGroup")
    BidModifier = apps.get_model("dash", "BidModifier")

    data_qs = AdGroup.objects.exclude(settings__cpc=None, settings__cpm=None).values(
        "id",
        "bidding_type",
        "settings__cpc",
        "settings__cpm",
        "adgroupsource__source__id",
        "adgroupsource__settings__cpc_cc",
        "adgroupsource__settings__cpm",
    )

    warning_ad_group_ids = set()

    chunk_number = 0
    for data_chunk in chunk_iterator(data_qs, chunk_size=BATCH_SIZE):
        chunk_number += 1
        logger.info("Processing chunk number %s", chunk_number)
        bid_modifier_list = []

        for element in data_chunk:
            bid_modifier_kwargs = {
                "type": bid_modifiers.BidModifierType.SOURCE,
                "ad_group_id": element["id"],
                "target": str(element["adgroupsource__source__id"]),
            }

            if element["bidding_type"] == constants.BiddingType.CPC:
                if element["settings__cpc"] is None:
                    # will be handled by consolidate command
                    continue

                if element["adgroupsource__settings__cpc_cc"] is None:
                    if element["adgroupsource__source__id"] is not None:
                        warning_ad_group_ids.add((element["id"], element["adgroupsource__source__id"]))
                    continue
                modifier = element["adgroupsource__settings__cpc_cc"] / element["settings__cpc"]
                bid_modifier_kwargs["modifier"] = modifier
            else:
                if element["settings__cpm"] is None:
                    # will be handled by consolidate command
                    continue

                if element["adgroupsource__settings__cpm"] is None:
                    if element["adgroupsource__source__id"] is not None:
                        warning_ad_group_ids.add((element["id"], element["adgroupsource__source__id"]))
                    continue
                modifier = element["adgroupsource__settings__cpm"] / element["settings__cpm"]
                bid_modifier_kwargs["modifier"] = modifier

            bid_modifier_list.append(BidModifier(**bid_modifier_kwargs))

        BidModifier.objects.bulk_create(bid_modifier_list, batch_size=BATCH_SIZE)

    if warning_ad_group_ids:
        logger.warning("No sources bid values for AdGroup ID , AdGroupSource ID pairs: %s", warning_ad_group_ids)


def delete_source_bid_modifiers(apps, schema_editor):
    BidModifier = apps.get_model("dash", "BidModifier")
    BidModifier.objects.filter(type=bid_modifiers.BidModifierType.SOURCE).delete()
