# Generated by Django 2.1.11 on 2020-12-18 10:33

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models
from django.conf import settings
from django.db import migrations
from django.db import models

import core.features.creatives.models.creative.entity_permission
import core.features.creatives.models.creative.instance
import core.features.creatives.models.creative.validation
import core.features.creatives.models.creative_batch.instance
import core.features.creatives.models.creative_candidate.validation


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dash", "0505_videoasset_supported_privacy_frameworks"),
    ]

    operations = [
        migrations.CreateModel(
            name="Creative",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Content ad"), (2, "Video ad"), (3, "Image display ad"), (4, "Display ad tag")],
                        default=1,
                    ),
                ),
                ("url", models.CharField(editable=False, max_length=2048)),
                ("title", models.CharField(editable=False, max_length=256)),
                ("display_url", models.CharField(blank=True, default="", max_length=35)),
                ("brand_name", models.CharField(blank=True, default="", max_length=25)),
                ("description", models.CharField(blank=True, default="", max_length=150)),
                ("call_to_action", models.CharField(blank=True, default="", max_length=25)),
                ("image_crop", models.CharField(default="center", max_length=25)),
                ("ad_tag", models.TextField(blank=True, null=True)),
                ("trackers", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ("additional_data", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                ("modified_dt", models.DateTimeField(auto_now=True, verbose_name="Modified at")),
                (
                    "account",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.Account"
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.Agency"
                    ),
                ),
            ],
            bases=(
                core.features.creatives.models.creative.entity_permission.EntityPermissionMixin,
                core.features.creatives.models.creative.instance.CreativeInstanceMixin,
                core.features.creatives.models.creative.validation.CreativeValidatorMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CreativeBatch",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=1024)),
                ("status", models.IntegerField(choices=[(1, "Done"), (2, "Failed"), (3, "In progress")], default=3)),
                ("original_filename", models.CharField(max_length=1024, null=True)),
                ("default_image_crop", models.TextField(blank=True, default="center", null=True)),
                ("default_display_url", models.TextField(blank=True, default="", null=True)),
                ("default_brand_name", models.TextField(blank=True, default="", null=True)),
                ("default_description", models.TextField(blank=True, default="", null=True)),
                ("default_call_to_action", models.TextField(blank=True, default="", null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                (
                    "account",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.Account"
                    ),
                ),
                (
                    "agency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.Agency"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            bases=(core.features.creatives.models.creative_batch.instance.CreativeBatchInstanceMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CreativeCandidate",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Content ad"), (2, "Video ad"), (3, "Image display ad"), (4, "Display ad tag")],
                        default=1,
                    ),
                ),
                ("url", models.TextField(blank=True, default="", null=True)),
                ("title", models.TextField(blank=True, default="", null=True)),
                ("display_url", models.TextField(blank=True, default="", null=True)),
                ("brand_name", models.TextField(blank=True, default="", null=True)),
                ("description", models.TextField(blank=True, default="", null=True)),
                ("call_to_action", models.TextField(blank=True, default="", null=True)),
                ("image_url", models.TextField(blank=True, default=None, null=True)),
                ("image_crop", models.TextField(blank=True, default="center", null=True)),
                ("icon_url", models.TextField(blank=True, default=None, null=True)),
                ("ad_tag", models.TextField(blank=True, null=True)),
                ("trackers", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ("trackers_status", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                (
                    "image_status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Waiting for response"), (3, "OK"), (4, "Failed")], default=1
                    ),
                ),
                (
                    "icon_status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Waiting for response"), (3, "OK"), (4, "Failed")], default=1
                    ),
                ),
                (
                    "url_status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Waiting for response"), (3, "OK"), (4, "Failed")], default=1
                    ),
                ),
                ("image_id", models.CharField(max_length=256, null=True)),
                ("image_width", models.PositiveIntegerField(null=True)),
                ("image_height", models.PositiveIntegerField(null=True)),
                ("image_hash", models.CharField(max_length=128, null=True)),
                ("image_file_size", models.PositiveIntegerField(null=True)),
                ("icon_id", models.CharField(max_length=256, null=True)),
                ("icon_width", models.PositiveIntegerField(null=True)),
                ("icon_height", models.PositiveIntegerField(null=True)),
                ("icon_hash", models.CharField(max_length=128, null=True)),
                ("icon_file_size", models.PositiveIntegerField(null=True)),
                ("additional_data", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ("created_dt", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                ("batch", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="dash.CreativeBatch")),
                (
                    "original_creative",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="dash.Creative"),
                ),
            ],
            bases=(
                core.features.creatives.models.creative_candidate.validation.CreativeCandidateValidatorMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CreativeTag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField()),
                (
                    "count",
                    models.IntegerField(default=0, help_text="Internal counter of how many times this tag is in use"),
                ),
                (
                    "protected",
                    models.BooleanField(default=False, help_text="Will not be deleted when the count reaches 0"),
                ),
                ("path", models.TextField()),
                ("label", models.CharField(help_text="The name of the tag, without ancestors", max_length=255)),
                ("level", models.IntegerField(default=1, help_text="The level of the tag in the tree")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="dash.CreativeTag",
                    ),
                ),
            ],
            options={"ordering": ("name",)},
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.AddField(
            model_name="creativecandidate",
            name="tags",
            field=tagulous.models.fields.TagField(
                _set_tag_meta=True,
                blank=True,
                help_text="Enter a comma-separated tag string",
                to="dash.CreativeTag",
                tree=True,
            ),
        ),
        migrations.AddField(
            model_name="creativecandidate",
            name="video_asset",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.VideoAsset"
            ),
        ),
        migrations.AddField(
            model_name="creativebatch",
            name="default_tags",
            field=tagulous.models.fields.TagField(
                _set_tag_meta=True,
                blank=True,
                help_text="Enter a comma-separated tag string",
                to="dash.CreativeTag",
                tree=True,
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="batch",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.CreativeBatch"
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="icon",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="creatives", to="dash.ImageAsset"
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="image",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.ImageAsset"),
        ),
        migrations.AddField(
            model_name="creative",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Modified by",
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="tags",
            field=tagulous.models.fields.TagField(
                _set_tag_meta=True,
                blank=True,
                help_text="Enter a comma-separated tag string",
                to="dash.CreativeTag",
                tree=True,
            ),
        ),
        migrations.AddField(
            model_name="creative",
            name="video_asset",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dash.VideoAsset"
            ),
        ),
    ]
