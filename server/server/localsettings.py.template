#!/usr/bin/env python

import os

from secretcrypt import Secret

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ENABLE_DJANGO_EXTENSIONS = DEBUG

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = Secret('plain::=o2)mkphq!igv$*josav@qobg)sz^uw2lorv@)kjcr1yct%q8l').get()

STATS_DB_NAME = 'stats'
STATS_E2E_DB_NAME = 'stats_e2e'


# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DJANGO_DATABASE', ''),
        'USER': '',
        'PASSWORD': ''
    },
    'e2e': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '',
        'USER': '',
        'PASSWORD': ''
    },
    STATS_DB_NAME: {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': 5439
    },
    STATS_E2E_DB_NAME: {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': 5439
    }
}

ALLOWED_HOSTS = []

BASE_URL = 'https://one.zemanta.com'

SECURE_SSL_REDIRECT = False
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Email settings
EMAIL_USE_TLS = True
EMAIL_HOST = ''
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = Secret('').get()

SEND_NOTIFICATION_MAIL = False
FROM_EMAIL = 'help-test@zemanta.com'

# Path to log file
LOG_FILE = '/path/to/log.log'

# Stats
STATSD_HOST = 'localhost'
STATSD_PORT = 8125

STATSD_INFLUX_HOST = ''
STATSD_INFLUX_PORT = 8135

# Saucelabs
SAUCELABS_USERNAME = ''
SAUCELABS_ACCESS_KEY = Secret('').get()

# Auth
GOOGLE_OAUTH_ENABLED = False
GOOGLE_OAUTH_CLIENT_ID = ''
GOOGLE_OAUTH_CLIENT_SECRET = Secret('').get()

# Static files
BUILD_NUMBER = None

if os.environ.get('BUILD'):
    BUILD_NUMBER = os.environ.get('BUILD')
elif os.path.isfile('build_number.txt'):
    with open('build_number.txt', 'r') as build_number:
        BUILD_NUMBER = build_number.read().strip()

if BUILD_NUMBER:
    ROOT_STATIC_URL = 'https://s3.amazonaws.com/z1-static/build-{}'.format(BUILD_NUMBER)
    SERVER_STATIC_URL = ROOT_STATIC_URL + '/server'
    CLIENT_STATIC_URL = ROOT_STATIC_URL + '/client'
else:
    SERVER_STATIC_URL = '/static'
    CLIENT_STATIC_URL = 'http://0.0.0.0:9999'

# Zwei callback base URL
ZWEI_CALLBACK_BASE_URL = ''

# Zwei API
ZWEI_API_TASKS_URL = 'http://127.0.0.1/purcel/tasks/'
ZWEI_API_GET_DASH_URL_URL = 'http://127.0.0.1/purcel/dash_url/'
ZWEI_API_SIGN_KEY = Secret('plain::aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa').get()

# K1 API
K1_API_SIGN_KEY = Secret('plain::aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa').get()

# Source credentials encryption key
CREDENTIALS_ENCRYPTION_KEY = Secret('plain::aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa').get()  # has to be 32 bytes

# Pagerduty settings
PAGER_DUTY_ENABLED = False
PAGER_DUTY_URL = ''
PAGER_DUTY_ADOPS_SERVICE_KEY = Secret('').get()
PAGER_DUTY_SYSOPS_SERVICE_KEY = Secret('').get()
PAGER_DUTY_ENGINEERS_SERVICE_KEY = Secret('').get()

# Sentry config
RAVEN_CONFIG = {
    'dsn': '',
}

# Amazon AWS keys
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = Secret('').get()

# S3 related settings
S3_BUCKET = ''
S3_BUCKET_STATS = ''
USE_S3 = False

# adgroup-level reports aggregations
QUERY_AGGREGATE_REPORTS = False

# email of the demo user
DEMO_USER_EMAIL = 'test.account@zemanta.si'
DEMO_USER_PASSWORD = 'zemantadsp'

# cache settings
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache'
    }
}
USE_HASH_CACHE = False
HASH_CACHE_TTL = 24 * 60 * 60

Z3_API_IMAGE_URL = ''
IMAGE_THUMBNAIL_URL = ''

# QUEUES
BROKER_TRANSPORT = 'sqs'
BROKER_USER = AWS_ACCESS_KEY_ID
BROKER_PASSWORD = AWS_SECRET_ACCESS_KEY

BROKER_URL = BROKER_TRANSPORT + '://' + BROKER_USER + ':' + BROKER_PASSWORD + '@'

CELERY_TASK_SERIALIZER = 'pickle'
CELERY_ACCEPT_CONTENT = ['pickle']

SQS_REGION = 'us-east-1'
SQS_QUEUE_PREFIX = 'test'
SQS_VISIBILITY_TIMEOUT = 10 * 60

BROKER_TRANSPORT_OPTIONS = {
    'visibility_timeout': SQS_VISIBILITY_TIMEOUT,
    'region': SQS_REGION,
    'polling_interval': 10,
}

R1_DEMO_MODE = False
R1_API_SIGN_KEY = Secret('').get()
R1_REDIRECTS_API_URL = 'https://r1.zemanta.com/api/redirects/'
R1_REDIRECTS_ADGROUP_API_URL = 'https://r1.zemanta.com/api/adgroup/{adgroup}/'
R1_VALIDATE_API_URL = 'https://r1.zemanta.com/api/validate/'
R1_BLANK_REDIRECT_URL = 'http://r1.zemanta.com/b/{redirect_id}/z1/1/{content_ad_id}/'
R1_CONVERSION_STATS_URL = 'https://r1.zemanta.com/api/conversions2/request/{date}/'
R1_CONVERSION_STATS_RESULT_URL = 'https://r1.zemanta.com/api/conversions2/result/{job_id}/'

BIDDER_API_SIGN_KEY = Secret('').get()

SHARETHROUGH_PARAM_SIGN_KEY = Secret('').get()

# BCM
BUDGET_RESERVE_FACTOR = 0.05

# k1
K1_DEMO_MODE = False
K1_CONSISTENCY_SYNC = False

K1_CONSISTENCY_PING_AD_GROUP_QUEUE = 'k1-consistency_ping_ad_group'
K1_CONSISTENCY_PING_CONTENT_AD_QUEUE = 'k1-consistency_ping_content_ad'
K1_CONSISTENCY_PING_BLACKLIST_QUEUE = 'k1-consistency_ping_blacklist'

# l1
LAMBDA_REGION = 'us-east-1'
LAMBDA_CONTENT_UPLOAD_SIGN_KEY = Secret('').get()
LAMBDA_CONTENT_UPLOAD_NAMESPACE = 't'
LAMBDA_CONTENT_UPLOAD_FUNCTION_NAME = 'z1-content-upload-test1'
LAMBDA_CONTENT_UPLOAD_CALLBACK_URL = 'https://z1-1452281140.us-east-1.elb.amazonaws.com/api/callbacks/content-upload/'
