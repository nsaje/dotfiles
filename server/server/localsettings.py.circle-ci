# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=o2)mkphq!igv$*josav@qobg)sz^uw2lorv@)kjcr1yct%q8l'

# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases

STATS_DB_NAME = 'stats'
STATS_E2E_DB_NAME = 'stats_e2e'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'circle_test',
        'USER': 'ubuntu',
        'PASSWORD': ''
    },
    'e2e': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'circle_test',
        'USER': 'ubuntu',
        'PASSWORD': ''
    },
    STATS_DB_NAME: {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': 5439,
    },
    STATS_E2E_DB_NAME: {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'circle_test',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': 5439,
    }
}

BASE_URL = 'https://one.zemanta.com'

# Email settings
EMAIL_USE_TLS = True
EMAIL_HOST = ''
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''

SEND_NOTIFICATION_MAIL = False
SUPPLY_REPORTS_FROM_EMAIL = 'supplyreports@zemanta.com'
FROM_EMAIL = 'help-test@zemanta.com'

MAILGUN_API_KEY = ''

# Path to log file
LOG_FILE = '/home/ubuntu/zemanta-eins.server.log'

# Metrics reporting
STATSD_HOST = ''
STATSD_PORT = 8125

# Saucelabs
SAUCELABS_USERNAME = ''
SAUCELABS_ACCESS_KEY = ''

# Auth
GOOGLE_OAUTH_ENABLED = False
GOOGLE_OAUTH_CLIENT_ID = ''
GOOGLE_OAUTH_CLIENT_SECRET = ''

# Static files
SERVER_STATIC_URL = '/static'
CLIENT_STATIC_URL = 'http://0.0.0.0:9999'

# Zwei callback base URL
ZWEI_CALLBACK_BASE_URL = ''

# Zwei API
ZWEI_API_TASKS_URL = 'http://127.0.0.1/purcel/tasks/'
ZWEI_API_GET_DASH_URL_URL = 'http://127.0.0.1/purcel/dash_url/'
ZWEI_API_SIGN_KEY = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'

# Source credentials encryption key
CREDENTIALS_ENCRYPTION_KEY = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'  # has to be 32 bytes

# Pagerduty settings
PAGER_DUTY_ENABLED = False
PAGER_DUTY_URL = ''
PAGER_DUTY_ADOPS_SERVICE_KEY = ''
PAGER_DUTY_SYSOPS_SERVICE_KEY = ''

# Sentry config
RAVEN_CONFIG = {
    'dsn': '',
}

# Amazon AWS keys
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''

# S3 related settings
S3_BUCKET = ''
USE_S3 = False

# fallback dir when S3 is not used
FILE_STORAGE_DIR = ''

# adgroup-level reports aggregations
QUERY_AGGREGATE_REPORTS=False

# email of the demo user
DEMO_USER_EMAIL = 'test.account@zemanta.si'
DEMO_USER_PASSWORD = 'zemantadsp'
DEMO_USERS = (
    'demo2@zemanta.si',
)

# cache settings
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache'
    }
}
USE_HASH_CACHE = False
HASH_CACHE_TTL = 24 * 60 * 60

Z3_API_IMAGE_URL = ''
Z3_API_THUMBNAIL_URL = ''

# QUEUES
BROKER_TRANSPORT = 'sqs'
BROKER_USER = AWS_ACCESS_KEY_ID
BROKER_PASSWORD = AWS_SECRET_ACCESS_KEY

BROKER_URL = BROKER_TRANSPORT + '://' + BROKER_USER + ':' + BROKER_PASSWORD + '@'

CELERY_TASK_SERIALIZER = 'pickle'
CELERY_ACCEPT_CONTENT = ['pickle']

SQS_REGION = 'us-east-1'
SQS_QUEUE_PREFIX = 'test'
SQS_VISIBILITY_TIMEOUT = 10 * 60

CAMPAIGN_CHANGE_QUEUE = SQS_QUEUE_PREFIX + '-campaign_change'

CELERY_DEFAULT_CONVAPI_QUEUE = SQS_QUEUE_PREFIX + '-convapi'
CELERY_DEFAULT_CONVAPI_V2_QUEUE = SQS_QUEUE_PREFIX + '-' + 'convapi_v2'

BROKER_TRANSPORT_OPTIONS = {
    'visibility_timeout': SQS_VISIBILITY_TIMEOUT,
    'region': SQS_REGION,
    'polling_interval': 10,
}

R1_API_SIGN_KEY = ''
R1_REDIRECTS_API_URL = 'https://r1.zemanta.com/api/redirects/'
R1_REDIRECTS_ADGROUP_API_URL = 'https://r1.zemanta.com/api/adgroup/{adgroup}/'
R1_VALIDATE_API_URL = 'https://r1.zemanta.com/api/validate/'
R1_BLANK_REDIRECT_URL = 'http://r1.zemanta.com/b/{redirect_id}/z1/1/{content_ad_id}/'
R1_CONVERSION_STATS_URL = 'https://r1.zemanta.com/api/conversions/request/{date}/{account_id}/{slug}/'
R1_CONVERSION_STATS_RESULT_URL = 'https://r1.zemanta.com/api/conversions/result/{job_id}/'

BIDDER_API_SIGN_KEY = ''

SHARETHROUGH_PARAM_SIGN_KEY = ''
