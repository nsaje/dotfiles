# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-07-21 14:12


from django.db import migrations


def platform_metrics_permission(apps, schema_editor):

    Permission = apps.get_model('auth', 'Permission')
    User = apps.get_model('zemauth', 'User')

    try:
        effective_permission = Permission.objects.get(codename='can_view_effective_costs')
    except Permission.DoesNotExist:
        # fresh database migration won't have this permission
        return

    try:
        platform_permission = Permission.objects.get(codename='can_view_platform_cost_breakdown')
    except Permission.DoesNotExist:
        ContentType = apps.get_model('contenttypes', 'ContentType')
        content_type = ContentType.objects.get_for_model(User)
        platform_permission = Permission.objects.create(
            codename='can_view_platform_cost_breakdown',
            name='User can view platform costs broken down into media, data and fee.',
            content_type=content_type,
        )

    for group in effective_permission.group_set.all():
        group.permissions.add(platform_permission)
        print('Permission {} added to group {}.'.format(group.name, platform_permission.codename))

    for user in effective_permission.user_set.all():
        user.user_permissions.add(platform_permission)
        print('Permission {} added to user {}.'.format(user.email, platform_permission.codename))

    print('Done.')


class Migration(migrations.Migration):

    dependencies = [
        ('zemauth', '0067_auto_20160721_1136'),
    ]

    operations = [
        migrations.RunPython(platform_metrics_permission)
    ]
